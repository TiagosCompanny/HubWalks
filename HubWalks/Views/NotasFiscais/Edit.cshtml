@model HubWalks.Bussines.Models.NotaFiscal

@{
    ViewData["Title"] = "Editar Nota Fiscal";
}

<div class="container">
    <div class="d-flex align-items-center justify-content-between mb-3">
        <h1 class="h3 m-0">Editar Nota Fiscal</h1>
        <a asp-action="Index" class="btn btn-secondary">Voltar</a>
    </div>

    <div class="card shadow-sm">
        <div class="card-body">
            <form asp-action="Edit" method="post" novalidate>
                <div asp-validation-summary="ModelOnly" class="text-danger mb-3"></div>
                <input type="hidden" asp-for="Id" />

                <div class="row g-3">
                    <div class="col-md-6">
                        <label asp-for="IdJobOrder" class="form-label">Ordem de Serviço</label>

                        @if ((ViewBag.JobOrders as IEnumerable<SelectListItem>)?.Any() == true)
                        {
                            <select asp-for="IdJobOrder"
                                    class="form-select"
                                    asp-items="@(ViewBag.JobOrders as IEnumerable<SelectListItem>)">
                                <option value="">-- selecione uma OS --</option>
                            </select>
                            <span asp-validation-for="IdJobOrder" class="text-danger"></span>
                        }
                        else
                        {
                            <div class="alert alert-warning d-flex align-items-center" role="alert">
                                <div>
                                    Não há Ordens de Serviço cadastradas.
                                    <a asp-controller="JobOrders" asp-action="Create" class="alert-link">Cadastre uma OS</a> antes de editar a nota.
                                </div>
                            </div>
                        }
                    </div>

                    <div class="col-md-6">
                        <label asp-for="DataEmissao" class="form-label"></label>
                        <input asp-for="DataEmissao" type="date" class="form-control" />
                        <span asp-validation-for="DataEmissao" class="text-danger"></span>
                    </div>

                    <div class="col-md-6">
                        <label asp-for="ValorTotal" class="form-label"></label>
                        <input asp-for="ValorTotal" type="number" step="0.01" class="form-control" />
                        <span asp-validation-for="ValorTotal" class="text-danger"></span>
                    </div>

                    <div class="col-md-6">
                        <label asp-for="NumeroNota" class="form-label"></label>
                        <input asp-for="NumeroNota" class="form-control" />
                        <span asp-validation-for="NumeroNota" class="text-danger"></span>
                    </div>

                    <div class="col-md-6">
                        <label asp-for="Serie" class="form-label"></label>
                        <input asp-for="Serie" class="form-control" />
                        <span asp-validation-for="Serie" class="text-danger"></span>
                    </div>

                    <div class="col-md-12">
                        <label asp-for="ChaveAcesso" class="form-label"></label>
                        <input asp-for="ChaveAcesso" class="form-control" />
                        <span asp-validation-for="ChaveAcesso" class="text-danger"></span>
                    </div>
                </div>

                <div class="mt-4 d-flex gap-2">
                    <button type="submit" class="btn btn-primary">Salvar</button>
                    <button type="reset" class="btn btn-outline-secondary">Limpar</button>
                    <a asp-action="Index" class="btn btn-secondary">Cancelar</a>
                </div>
            </form>
        </div>
    </div>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}
